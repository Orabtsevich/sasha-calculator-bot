import os
import logging
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, ContextTypes, filters, ConversationHandler

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞
(
    ADDRESS, WIDTH, HEIGHT, DEPTH, ELEMENTS, RS_COUNT, POSTS, SHELVES,
    SHELF_SIZES_CHOICE, CUSTOM_SHELF_SIZES, ROD, FALSE_PANEL, METAL_CUTTING,
    RS_TYPE, SHELF_TYPE, SGR_TIERS, SGR_ADJUSTMENT, BUMPER_INSTALLATION,
    BUMPER_TRANSFER, SECOND_INSTALLER, DISTANCE_KAD, WALL_MATERIAL,
    ROOF_MATERIAL, RS_PROFILE, FLOOR_COVERING, COLOR, SHELF_MATERIAL,
    OPTIONS
) = range(28)

# –ü—Ä–∞–π—Å-–ª–∏—Å—Ç
PRICE_LIST = {
    '–í—ã—Ö–æ–¥': 2000,
    '–î–æ—Å—Ç–∞–≤–∫–∞ 1 –∑–∞–∫–∞–∑': 2000,
    '–í—Ç–æ—Ä–∞—è –†/–° —à–∏—Ä–µ 2—Ö –º–µ—Ç—Ä–æ–≤': 1000,
    '–í—Ç–æ—Ä–æ–π –º–æ–Ω—Ç–∞–∂–Ω–∏–∫': 2000,
    '–ë–æ–∫–æ–≤–∞—è —Å—Ç–µ–Ω–∫–∞. –º/–ø': 364,
    '–ö—Ä—ã—à–∞. –º/–ø': 280,
    '–ú—è–≥–∫–∞—è –∫—Ä–æ–≤–ª—è. –º/–ø': 180,
    '–ó–∞–¥–Ω—è—è —Å—Ç–µ–Ω–∫–∞. –º2': 250,
    '–î–Ω–æ OSB. –º/–ø': 350,
    '–ù–∞ –¥–Ω–æ –∫–≤–∏–Ω—Ç–µ—Ç (—Ü–∏–Ω–∫). –º/–ø': 100,
    '–ü–µ—Ä–µ–≥–æ—Ä–æ–¥–∫–∞. –º/–ø': 300,
    '–§–∞–ª—å—à-–ø–∞–Ω–µ–ª—å. —à—Ç': 550,
    '–†/–° (PD39, PD45, PD55 –¥–æ 6 –º2). —à—Ç': 300,
    '–†/–° (AER44mS –æ—Ç 4 –º2, PD55 –æ—Ç 6 –º2). —à—Ç': 500,
    '–†–∞–º–∞ —Å—Ç–µ–ª–ª–∞–∂–∞ + —É–ø–æ—Ä. –º/–ø': 250,
    '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ–ª–æ–∫ OSB. –º/–ø': 100,
    '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ–ª–æ–∫ –º–µ—Ç–∞–ª–ª. –º/–ø': 160,
    '–†–µ–∑–∫–∞ –º–µ—Ç–∞–ª–ª, –ª–∞–º–µ–ª–µ–π. —à—Ç': 30,
    '–†–∞–º–∞ —Å—Ç–µ–ª–ª–∞–∂. —à—Ç': 400,
    '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —è—Ä—É—Å–æ–≤. –º/–ø': 80,
    '–ü–æ–¥–≥–æ–Ω–∫–∞ –ø–æ —à–∏—Ä–∏–Ω–µ –Ω–∞ –º–µ—Å—Ç–µ. –ö–æ–º–ø–ª–µ–∫': 500,
    '–®—Ç–∞–Ω–≥–∞. —à—Ç': 200,
    '–û—Ç–±–æ–π–Ω–∏–∫–∏ (–º–æ–Ω—Ç–∞–∂ –Ω–æ–≤—ã—Ö). –∫–æ–º–ø–ª–µ–∫': 400,
    '–û—Ç–±–æ–π–Ω–∏–∫–∏ (–ø–µ—Ä–µ–Ω–æ—Å). –∫–æ–º–ø–ª–µ–∫': 700,
    'LED —Å–≤–µ—Ç–∏–ª—å–Ω–∏–∫. —à—Ç': 200,
    '–≠–ª–µ–∫—Ç—Ä–æ–ø—Ä–∏–≤–æ–¥ (–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ) —à—Ç': 500,
    '–í–µ–Ω—Ç —Ä–µ—à–µ—Ç–∫–∏ (—Å—Ç–µ–Ω–∫–∏) —à—Ç': 200,
    '–°—Ç–æ–π–∫–∏ –¥–ª—è –∫–æ–ª–µ—Å. —à—Ç': 500,
    '–í—ã–µ–∑–¥ –∑–∞ –ú–ö–ê–î –±–æ–ª–µ–µ 10 –∫–º. (15–†—É–±/–∫–º)': 15,
    '–í—ã—Å–æ—Ç–∞ —à–∫–∞—Ñ–∞ 2,5-3 –º': 500,
    '–í—ã—Å–æ—Ç–∞ —à–∫–∞—Ñ–∞ 3–º –∏ –±–æ–ª–µ–µ': 1000,
    '–§–æ—Ç–æ –∑–∞–∫–∞–∑—á–∏–∫–∞ –Ω–∞ —Ñ–æ–Ω–µ —à–∫–∞—Ñ–∞. —à—Ç': 250,
    '–í–∏–¥–µ–æ–æ—Ç–∑—ã–≤': 750
}

MATERIALS = {
    'wall': ["–°—ç–Ω–¥–≤–∏—á-–ø–∞–Ω–µ–ª—å 40 –º–º", "–ü—Ä–æ—Ñ–ª–∏—Å—Ç –°8–ê, 0,45 –º–º"],
    'roof': ["–°—ç–Ω–¥–≤–∏—á-–ø–∞–Ω–µ–ª—å 40 –º–º", "–ü—Ä–æ—Ñ–ª–∏—Å—Ç –°8–ê, 0,45 –º–º", "–ü–ª–∏—Ç–∞ OSB + –º—è–≥–∫–∞—è –∫—Ä–æ–≤–ª—è"],
    'rs_profile': ["PD 45", "PD 55", "AR 40", "AER 44–º/5", "AEG 56"],
    'floor': ["–Ω–µ—Ç", "–ø–æ–∫—Ä–∞—Å–∫–∞", "–ª–∏—Å—Ç –æ—Ü–∏–Ω–∫. –º–µ—Ç–∞–ª–ª–∞", "–ª–∏—Å—Ç –∞–ª—é–º–∏–Ω–∏—è (–∫–≤–∏–Ω—Ç–µ—Ç)"],
    'color': ["–°–µ—Ä–µ–±—Ä–∏—Å—Ç—ã–π RAL 9006", "–ë–µ–∂–µ–≤—ã–π RAL 1014", "–ë–µ–ª—ã–π RAL 9003", "–ê–Ω—Ç—Ä–∞—Ü–∏—Ç RAL 7016", "–ö–æ—Ä–∏—á–Ω–µ–≤—ã–π RAL 8014", "–ö–æ—Ä–∏—á–Ω–µ–≤—ã–π RAL 8017", "–°–µ—Ä—ã–π RAL 7038"],
    'shelf': ["–ú–µ—Ç–∞–ª–ª", "–ü–ª–∏—Ç–∞ OSB 22 –º–º", "–°–ì–†", "–ù–∞–≤–µ—Å–Ω–æ–π"]
}

OPTIONS_LIST = [
    "–í–µ–Ω—Ç. —Ä–µ—à–µ—Ç–∫–∞",
    "LED —Å–≤–µ—Ç–∏–ª—å–Ω–∏–∫",
    "–≠–ª–µ–∫—Ç—Ä–æ–ø—Ä–∏–≤–æ–¥",
    "–°—Ç–æ–π–∫–∏ –¥–ª—è –∫–æ–ª–µ—Å",
    "–§–æ—Ç–æ –∑–∞–∫–∞–∑—á–∏–∫–∞",
    "–í–∏–¥–µ–æ–æ—Ç–∑—ã–≤"
]

# –í—Å–µ –≤–∞—à–∏ async def —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
# (start, get_address, get_width, ..., calculate_result, cancel)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –∑–∞—Ä–ø–ª–∞—Ç—ã –º–∞—Å—Ç–µ—Ä–∞ –°–∞—à–∏.\n\n"
        "–î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω—ë–º —Ä–∞—Å—á—ë—Ç. –í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –º–æ–Ω—Ç–∞–∂–∞:"
    )
    return ADDRESS

# ... (–æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ get_address, get_width –∏ —Ç.–¥. - –æ—Å—Ç–∞–≤—å—Ç–µ –∫–∞–∫ –µ—Å—Ç—å)

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–†–∞—Å—á—ë—Ç –æ—Ç–º–µ–Ω—ë–Ω.", reply_markup=ReplyKeyboardMarkup([["/start"]], one_time_keyboard=True))
    return ConversationHandler.END

def main():
    # –í–†–ï–ú–ï–ù–ù–û –¥–ª—è —Ç–µ—Å—Ç–∞ - –≤—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à —Ç–æ–∫–µ–Ω –∑–¥–µ—Å—å
    TOKEN = "8131813785:AAEn4UkKQ2AhFzoz53YD-PRMwbTk..."  # ‚Üê –ó–ê–ú–ï–ù–ò–¢–ï –ù–ê –í–ê–® –¢–û–ö–ï–ù!
    
    print(f"üöÄ BOT_TOKEN (length={len(TOKEN)}): '{TOKEN}'")
    
    if not TOKEN:
        print("‚ùå BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        return

    try:
        application = Application.builder().token(TOKEN).build()
        print("‚úÖ Application —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è Application: {e}")
        return

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler('start', start)],
        states={
            ADDRESS: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_address)],
            WIDTH: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_width)],
            HEIGHT: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_height)],
            DEPTH: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_depth)],
            ELEMENTS: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_elements)],
            RS_COUNT: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_rs_count)],
            POSTS: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_posts)],
            SHELVES: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_shelves)],
            SHELF_SIZES_CHOICE: [MessageHandler(filters.TEXT & ~filters.COMMAND, shelf_sizes_choice)],
            CUSTOM_SHELF_SIZES: [MessageHandler(filters.TEXT & ~filters.COMMAND, custom_shelf_sizes)],
            ROD: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_rod)],
            FALSE_PANEL: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_false_panel)],
            METAL_CUTTING: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_metal_cutting)],
            RS_TYPE: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_rs_type)],
            SHELF_TYPE: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_shelf_type)],
            SGR_TIERS: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_sgr_tiers)],
            SGR_ADJUSTMENT: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_sgr_adjustment)],
            BUMPER_INSTALLATION: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_bumper_installation)],
            BUMPER_TRANSFER: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_bumper_transfer)],
            SECOND_INSTALLER: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_second_installer)],
            DISTANCE_KAD: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_distance_kad)],
            WALL_MATERIAL: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_wall_material)],
            ROOF_MATERIAL: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_roof_material)],
            RS_PROFILE: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_rs_profile)],
            FLOOR_COVERING: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_floor_covering)],
            COLOR: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_color)],
            SHELF_MATERIAL: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_shelf_material)],
            OPTIONS: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_options)],
        },
        fallbacks=[CommandHandler('cancel', cancel)]
    )

    application.add_handler(conv_handler)
    print("‚úÖ –ó–∞–ø—É—Å–∫ polling...")
    application.run_polling()

if __name__ == '__main__':
    main()
